# This configuration file stores information about every toolkit that we offer,
# and all the component's information, including it's version, description, and it's
# source URL.
# This file is used to generate toolkit-manifest (aka toolset-manifest) for each toolkit,
# also used to fetch component's package from web in order to pack the offline version,
# check cargo dev command for more details.
# This file is meant to be modified manually.
#
# 此配置文件存储了我们提供的所有工具包的信息，以及所有组件的信息，包括其版本、描述和源URL。
# 此文件用于为每个工具包生成 `toolkit-manifest`（又称 `toolset-manifest`），还用于从网络获取组件包，以便打包离线版本。
# 更多详情请查看 `cargo dev` 命令。
# 此文件需要手动修改。

[config]
rust-server = "https://xuanwu.base.atomgit.com"
rustup-server = "https://xuanwu.base.atomgit.com/rustup"
# The folder path (under `resources` dir) to store downloaded packages, used for offline packaging.
# package-dir = "packages"
targets = [
    "aarch64-unknown-linux-gnu",
    "x86_64-pc-windows-gnu",
    "x86_64-pc-windows-msvc",
    "x86_64-unknown-linux-gnu",
]
components = [
    "cargo",
    "clippy",
    "rust-std",
    { name = "rust-docs", excluded-targets = [ "aarch64-unknown-linux-musl" ] },
    "rustc",
    # "rustc-dev",
    "rustfmt",
    "llvm-tools",
    { name = "rust-mingw", target = "x86_64-pc-windows-gnu" },
    { name = "rust-src", wildcard-target = true },
    "rust-analyzer",
]

# ========================= Manifest For Basic (test) Toolkit START =========================
[toolkit.basic.config]
date = "2025-04-03"

[toolkit.basic.value]
name = "XuanWu Rust Development Kit"
version = "stable v1.86.0"

[toolkit.basic.value.rust]
display-name = "Basic"
description = "Basic set of tools to use Rust properly"
profile = "minimal"
version = "1.86.0"
group = "Rust"
components = ["clippy", "rustfmt", "rust-src"]
optional-components = ["llvm-tools", "rust-docs"]

[toolkit.basic.value.tools.descriptions]
llvm-tools = "Contains a collection of LLVM tools. Note that this component has not been stabilized and may change in the future and is provided as-is"
rustc-dev = "Contains the compiler as a library. Most users will not need this; it is only needed for development of tools that link to the compiler, such as making modifications to Clippy."
rust-docs = "A local copy of the Rust documentation. Allowing user to open the documentation in a web browser using the `rustup doc` command"
mingw64 = "(windows only) Requirement for Windows GNU toolchain"

[toolkit.basic.value.tools.group]
Prerequisites = ["mingw64"]

[toolkit.basic.value.tools.target.x86_64-pc-windows-gnu]
mingw64 = { required = true, version = "14.2.0-rt_v12-rev0", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/x86_64-14.2.0-release-posix-seh-ucrt-rt_v12-rev0.7z" }
# ========================= Manifest For Basic (test) Toolkit END =========================

# ========================= Manifest For Community Toolkit START =========================
[toolkit.community.config]
date = "2025-04-03"
# These tools does not allow re-distribution
web-only = [ "buildtools", "vscode" ]

[toolkit.community.value]
name = "Rust 中国社区一站式开发套件"
version = "stable v1.86.0"

[toolkit.community.value.rust]
display-name = "Rust 官方工具"
description = "Rust 官方工具链，包含 rustc (编译器), rust-std (标准库), cargo (包管理) 等工具"
profile = "minimal"
version = "1.86.0"
group = "Rust 基础工具集"
components = ["clippy", "rustfmt", "rust-src"]
optional-components = ["llvm-tools", "rust-docs", "rust-analyzer"]

[toolkit.community.value.tools.descriptions]
llvm-tools = "包含 LLVM 工具的集合"
rustc-dev = "将编译器作为库来内部 API。大多数用户不需要这个; 仅当开发链接到编译器的工具时才需要它, 例如对 Clippy 进行修改"
rust-docs = "本地 Rust 文档副本，允许用户使用 rustup doc 命令在 Web 浏览器中打开文档"
rust-analyzer = "Rust 编程语言的 语言服务器协议 (LSP) 实现。注: 这是 rust-analyzer 的服务端, 若需要在编辑器 (如 VS Code) 中使用其代码补全、跳转到定义等功能, 只需选择列表中相应的编辑器插件即可。"
mingw64 = "编译器在 x86_64 Windows GNU 环境下的依赖组件"
typos = "源代码拼写检查器，用于查找并纠正源代码中的拼写错误"
cargo-nextest = "新一代 Rust 项目测试运行程序，相比传统 cargo test 而言更快速，界面更简洁明了"
vscode = "Visual Studio Code (简称 VS Code) 将代码编辑器的简洁性与开发者核心的 编辑-构建-调试 流程相结合。它提供全面的代码编辑、导航和理解支持，同时具备轻量级调试功能、丰富的扩展模型，并可与现有工具无缝集成，提升开发效率。"
vscodium = "一个由社区维护的、采用自由许可的 VS Code 二进制发行版 —— 基于微软开源的 VS Code 源代码（MIT 许可），但去除了微软的品牌标识和遥测功能，提供了一个完全开源、无数据追踪的开发环境，适用于希望避免微软官方构建限制的用户。"
codearts-rust = "CodeArts IDE 定位华为云开发者桌面，是利用自主可控技术内核，面向华为云开发者提供的智能化可扩展桌面集成开发环境（IDE），结合华为云行业和产业开发套件，实现极致的一站式用云和开发体验。"
vscode-rust-analyzer = "Rust 编程语言的 语言服务器协议 (LSP) 实现。为 VS Code 等编辑器或 IDE 提供代码补全、跳转到定义等功能，提升 Rust 开发体验。"
buildtools = "Visual Studio 构建/生成工具允许您通过命令行界面构建 Visual Studio 项目，支持的项目类型包括：ASP.NET、Azure、C++ 桌面应用等。对于 msvc 目标平台，要将程序编译为 `.exe` 文件，Rust 需要一个链接器、库以及 Windows API 的导入库。而这些工具和库可以通过安装此组件来获取。"

[toolkit.community.value.tools.group]
"Rust 基础工具集" = ["mingw64", "buildtools"]
"Rust 优选工具集" = ["typos", "cargo-nextest"]
"Rust 软件开发工具链" = ["vscode", "vscodium", "codearts-rust", "vscode-rust-analyzer"]

[toolkit.community.value.tools.target.x86_64-pc-windows-gnu]
mingw64 = { display-name = "MinGW-w64", required = true, version = "14.2.0-rt_v12-rev2", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/mingw64/14.2.0-rt_v12-rev2/x86_64-14.2.0-release-posix-seh-ucrt-rt_v12-rev2.7z" }
codearts-rust = { display-name = "CodeArts IDE", version = "3.2.0", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/codearts/3.2.0/codearts-rust.zip" }
cargo-nextest = { optional = true, version = "0.9.94", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/cargo-nextest/0.9.94/cargo-nextest-0.9.94-x86_64-pc-windows-msvc.zip" }
typos = { optional = true, version = "1.31.1", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/typos/1.31.1/typos-v1.31.1-x86_64-pc-windows-msvc.zip" }

[toolkit.community.value.tools.target.x86_64-pc-windows-msvc]
buildtools = { required = true, display-name = "Visual Studio Build Tools", restricted = true, default = "https://aka.ms/vs/17/release/vs_BuildTools.exe" }
codearts-rust = { display-name = "CodeArts IDE", version = "3.2.0", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/codearts/3.2.0/codearts-rust.zip" }
cargo-nextest = { optional = true, version = "0.9.94", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/cargo-nextest/0.9.94/cargo-nextest-0.9.94-x86_64-pc-windows-msvc.zip" }
typos = { optional = true, version = "1.31.1", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/typos/1.31.1/typos-v1.31.1-x86_64-pc-windows-msvc.zip" }

[toolkit.community.value.tools.target.x86_64-unknown-linux-gnu]
vscodium = { display-name = "VSCodium", version = "1.99.32562", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/codium/1.99.32562/VSCodium-linux-x64-1.99.32562.tar.gz" }
vscode-rust-analyzer = { display-name = "rust-analyzer (插件)", requires = ["vscodium"], version = "0.3.2379", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/rust-analyzer/0.3.2379/rust-analyzer-linux-x64.vsix" }
cargo-nextest = { optional = true, version = "0.9.94", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/cargo-nextest/0.9.94/cargo-nextest-0.9.94-x86_64-unknown-linux-gnu.tar.gz" }
typos = { optional = true, version = "1.31.1", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/typos/1.31.1/typos-v1.31.1-x86_64-unknown-linux-musl.tar.gz" }

[toolkit.community.value.tools.target.aarch64-unknown-linux-gnu]
vscodium = { display-name = "VSCodium", version = "1.99.32562", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/codium/1.99.32562/VSCodium-linux-arm64-1.99.32562.tar.gz" }
vscode-rust-analyzer = { display-name = "rust-analyzer (插件)", requires = ["vscodium"], version = "0.3.2379", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/rust-analyzer/0.3.2379/rust-analyzer-linux-arm64.vsix" }
cargo-nextest = { optional = true, version = "0.9.94", url = "https://rust-mirror.obs.cn-north-4.myhuaweicloud.com/dist/toolset/cargo-nextest/0.9.94/cargo-nextest-0.9.94-aarch64-unknown-linux-gnu.tar.gz" }
typos = { optional = true, ver = "1.31.1", identifier = "typos-cli" }
# ========================= Manifest For Community Toolkit END =========================
