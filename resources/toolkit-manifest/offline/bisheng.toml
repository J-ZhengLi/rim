
# This file was automatically generated.
# 此文件是自动生成的.
name = "Rust 中国社区发行版 (毕昇)"
version = "stable v1.72.0"
edition = "bisheng"

[rust]
channel = "1.72.0"
profile = "minimal"
display-name = "Rust 官方工具"
description = "Rust 官方工具链，包含 rustc (编译器), rust-std (标准库), cargo (包管理) 等工具"
components = ["clippy", "rustfmt", "rust-src"]
optional-components = ["llvm-tools", "rust-analyzer"]
group = "Rust 基础工具集"
offline-dist-server = "toolchain"

[rust.rustup]
aarch64-unknown-linux-gnu = "tools/rustup-init"
x86_64-pc-windows-gnu = "tools/rustup-init.exe"
x86_64-pc-windows-msvc = "tools/rustup-init.exe"
x86_64-unknown-linux-gnu = "tools/rustup-init"

[tools.descriptions]
llvm-tools = "包含 LLVM 工具的集合"
rustc-dev = "将编译器作为库来内部 API。大多数用户不需要这个; 仅当开发链接到编译器的工具时才需要它, 例如对 Clippy 进行修改"
rust-docs = "本地 Rust 文档副本，允许用户使用 rustup doc 命令在 Web 浏览器中打开文档"
rust-analyzer = "Rust 编程语言的 语言服务器协议 (LSP) 实现。注: 这是 rust-analyzer 的服务端, 若需要在编辑器 (如 VS Code) 中使用其代码补全、跳转到定义等功能, 只需选择列表中相应的编辑器插件即可。"
mingw64 = "编译器在 x86_64 Windows GNU 环境下的依赖组件"
cargo-nextest = "新一代 Rust 项目测试运行程序，相比传统 cargo test 而言更快速，界面更简洁明了"
vscode = "Visual Studio Code (简称 VS Code) 将代码编辑器的简洁性与开发者核心的 编辑-构建-调试 流程相结合。它提供全面的代码编辑、导航和理解支持，同时具备轻量级调试功能、丰富的扩展模型，并可与现有工具无缝集成，提升开发效率。"
vscodium = "一个由社区维护的、采用自由许可的 VS Code 二进制发行版 —— 基于微软开源的 VS Code 源代码（MIT 许可），但去除了微软的品牌标识和遥测功能，提供了一个完全开源、无数据追踪的开发环境，适用于希望避免微软官方构建限制的用户。"
codearts-rust = "CodeArts IDE 定位华为云开发者桌面，是利用自主可控技术内核，面向华为云开发者提供的智能化可扩展桌面集成开发环境（IDE），结合华为云行业和产业开发套件，实现极致的一站式用云和开发体验。"
vscode-rust-analyzer = "Rust 编程语言的 语言服务器协议 (LSP) 实现。为 VS Code 等编辑器或 IDE 提供代码补全、跳转到定义等功能，提升 Rust 开发体验。"
buildtools = "Visual Studio 构建/生成工具允许您通过命令行界面构建 Visual Studio 项目，支持的项目类型包括：ASP.NET、Azure、C++ 桌面应用等。对于 msvc 目标平台，要将程序编译为 `.exe` 文件，Rust 需要一个链接器、库以及 Windows API 的导入库。而这些工具和库可以通过安装此组件来获取。"
coding-guidelines-ruleset = "Rust 编程规范的代码检查规则集，提供了基于该规范要求或建议的全部自定义检查规则 (lint)。"
ylong_json = "ylong_json 是一个通用的 JSON 语法解析库，提供了 JSON 文本和特定数据结构之间的相互转换功能。"
ylong_light_actor = "ylong_light_actor 提供了两个功能模块：Actor 和 EventHandler. Actor 编程模型是一种并发编程模型，旨在解决并发编程中使用传统的内存共享模型带来的数据竞争以及加锁导致的性能损失及死锁等问题。EventHandler 提供一种机制，用于处理线程间通信，可以通过创建新线程，将耗时的操作放到新线程上执行。这样既不阻塞原来的线程，任务又可以得到合理的处理。"
ylong_xml = "ylong_xml 模块提供了 XML 语法格式文本或字符串的序列化功能，以及对应生成实例的反序列化功能。"

[tools.group]
"Rust 基础工具集" = ["mingw64", "buildtools"]
"Rust 优选工具集" = ["cargo-nextest"]
"Rust 软件开发工具链" = ["vscode", "vscodium", "codearts-rust", "vscode-rust-analyzer"]
"Rust 代码检查工具集" = ["coding-guidelines-ruleset"]
"Rust 优选开发库" = ["ylong_json", "ylong_light_actor", "ylong_xml"]

[tools.target.x86_64-pc-windows-gnu.mingw64]
required = true
version = "14.2.0-rt_v12-rev2"
path = "tools/x86_64-14.2.0-release-posix-seh-ucrt-rt_v12-rev2.7z"
display-name = "MinGW-w64"

[tools.target.x86_64-pc-windows-gnu.codearts-rust]
version = "3.2.0"
path = "tools/codearts-rust.zip"
display-name = "CodeArts IDE"

[tools.target.x86_64-pc-windows-gnu.cargo-nextest]
optional = true
version = "0.9.94"
path = "tools/cargo-nextest-0.9.94-x86_64-pc-windows-msvc.zip"

[tools.target.x86_64-pc-windows-gnu.coding-guidelines-ruleset]
optional = true
version = "0.1.0"
path = "tools/rust-1.74.0-x86_64-pc-windows-gnu.tar.xz"
kind = "rule-set"
display-name = "编程规范规则集"
requires = ["rust"]

[tools.target.x86_64-pc-windows-gnu.ylong_json]
optional = true
version = "1.0.0"
path = "tools/commonlibrary_rust_ylong_json-master.zip"
kind = "crate"

[tools.target.x86_64-pc-windows-gnu.ylong_light_actor]
optional = true
version = "0.1.0"
path = "tools/commonlibrary_rust_ylong_light_actor-master.zip"
kind = "crate"

[tools.target.x86_64-pc-windows-gnu.ylong_xml]
optional = true
version = "0.1.0"
path = "tools/commonlibrary_rust_ylong_xml-master.zip"
kind = "crate"

[tools.target.x86_64-pc-windows-msvc.buildtools]
required = true
restricted = true
default = "https://aka.ms/vs/17/release/vs_BuildTools.exe"
display-name = "Visual Studio Build Tools"

[tools.target.x86_64-pc-windows-msvc.codearts-rust]
version = "3.2.0"
path = "tools/codearts-rust.zip"
display-name = "CodeArts IDE"

[tools.target.x86_64-pc-windows-msvc.cargo-nextest]
optional = true
version = "0.9.94"
path = "tools/cargo-nextest-0.9.94-x86_64-pc-windows-msvc.zip"

[tools.target.x86_64-pc-windows-msvc.coding-guidelines-ruleset]
optional = true
version = "0.1.0"
path = "tools/rust-1.74.0-x86_64-pc-windows-msvc.tar.xz"
kind = "rule-set"
display-name = "编程规范规则集"
requires = ["rust"]

[tools.target.x86_64-pc-windows-msvc.ylong_json]
optional = true
version = "1.0.0"
path = "tools/commonlibrary_rust_ylong_json-master.zip"
kind = "crate"

[tools.target.x86_64-pc-windows-msvc.ylong_light_actor]
optional = true
version = "0.1.0"
path = "tools/commonlibrary_rust_ylong_light_actor-master.zip"
kind = "crate"

[tools.target.x86_64-pc-windows-msvc.ylong_xml]
optional = true
version = "0.1.0"
path = "tools/commonlibrary_rust_ylong_xml-master.zip"
kind = "crate"

[tools.target.x86_64-unknown-linux-gnu.vscodium]
gui-only = true
version = "1.99.32562"
path = "tools/VSCodium-linux-x64-1.99.32562.tar.gz"
display-name = "VSCodium"

[tools.target.x86_64-unknown-linux-gnu.vscode-rust-analyzer]
gui-only = true
version = "0.3.2379"
path = "tools/rust-analyzer-linux-x64.vsix"
display-name = "rust-analyzer (插件)"
requires = ["vscodium"]

[tools.target.x86_64-unknown-linux-gnu.cargo-nextest]
optional = true
version = "0.9.94"
path = "tools/cargo-nextest-0.9.94-x86_64-unknown-linux-gnu.tar.gz"

[tools.target.x86_64-unknown-linux-gnu.coding-guidelines-ruleset]
optional = true
version = "0.1.0"
path = "tools/rust-1.74.0-x86_64-unknown-linux-gnu.tar.xz"
kind = "rule-set"
display-name = "编程规范规则集"
requires = ["rust"]

[tools.target.x86_64-unknown-linux-gnu.ylong_json]
optional = true
version = "1.0.0"
path = "tools/commonlibrary_rust_ylong_json-master.zip"
kind = "crate"

[tools.target.x86_64-unknown-linux-gnu.ylong_light_actor]
optional = true
version = "0.1.0"
path = "tools/commonlibrary_rust_ylong_light_actor-master.zip"
kind = "crate"

[tools.target.x86_64-unknown-linux-gnu.ylong_xml]
optional = true
version = "0.1.0"
path = "tools/commonlibrary_rust_ylong_xml-master.zip"
kind = "crate"

[tools.target.aarch64-unknown-linux-gnu.vscodium]
gui-only = true
version = "1.99.32562"
path = "tools/VSCodium-linux-arm64-1.99.32562.tar.gz"
display-name = "VSCodium"

[tools.target.aarch64-unknown-linux-gnu.vscode-rust-analyzer]
gui-only = true
version = "0.3.2379"
path = "tools/rust-analyzer-linux-arm64.vsix"
display-name = "rust-analyzer (插件)"
requires = ["vscodium"]

[tools.target.aarch64-unknown-linux-gnu.cargo-nextest]
optional = true
version = "0.9.94"
path = "tools/cargo-nextest-0.9.94-aarch64-unknown-linux-gnu.tar.gz"

[tools.target.aarch64-unknown-linux-gnu.coding-guidelines-ruleset]
optional = true
version = "0.1.0"
path = "tools/rust-1.74.0-aarch64-unknown-linux-gnu.tar.xz"
kind = "rule-set"
display-name = "编程规范规则集"
requires = ["rust"]

[tools.target.aarch64-unknown-linux-gnu.ylong_json]
optional = true
version = "1.0.0"
path = "tools/commonlibrary_rust_ylong_json-master.zip"
kind = "crate"

[tools.target.aarch64-unknown-linux-gnu.ylong_light_actor]
optional = true
version = "0.1.0"
path = "tools/commonlibrary_rust_ylong_light_actor-master.zip"
kind = "crate"

[tools.target.aarch64-unknown-linux-gnu.ylong_xml]
optional = true
version = "0.1.0"
path = "tools/commonlibrary_rust_ylong_xml-master.zip"
kind = "crate"
